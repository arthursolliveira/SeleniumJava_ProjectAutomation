package br.so.soliveira.tests;

import java.util.Arrays;
import java.util.List;

import org.junit.Assert;
import org.junit.Test;

import br.so.soliveira.core.BaseTest;
import br.so.soliveira.pages.MenuPage;
import br.so.soliveira.pages.MovimentacaoPage;

public class MovimentacaoTest extends BaseTest {
	
	private MenuPage menuPage = new MenuPage();
	private MovimentacaoPage movPage = new MovimentacaoPage();
	
	@Test
	public void testInserirMovimentacao() {
		menuPage.acessarTelaInserirMovimentacao();
		
		movPage.setDataMovimentacao("20/04/2023");
		movPage.setDataPagamento("27/04/2023");
		movPage.setDescricao("Movimentacao do teste");
		movPage.setInteressado("interessado qualquer teste");
		movPage.setValor("500");
		movPage.setConta("Conta do Teste alterada");
		movPage.setStatusPago();
		movPage.salvar();
		
		Assert.assertEquals("Movimentação adicionada com sucesso!", movPage.obterMensagemSucesso());
	}
	
	@Test
	public void testCamposObrigatorios() {
		menuPage.acessarTelaInserirMovimentacao();
		
		movPage.salvar();
		List<String> erros = movPage.obterErros();
		//Assert.assertEquals("Data da Movimentação é obrigatório", erros.get(0));
		//Assert.assertTrue(erros.contains("Data da Movimentação é obrigatório"));
		Assert.assertTrue(erros.containsAll(Arrays.asList(
				"Data da Movimentação é obrigatório", "Data do pagamento é obrigatório",
				"Descrição é obrigatório", "Interessado é obrigatório",
				"Valor é obrigatório","Valor deve ser um número")));
		Assert.assertEquals(6, erros.size());
	}
	
	@Test
	public void testInserirMovimentacaoFutura() {
menuPage.acessarTelaInserirMovimentacao();
		
		movPage.setDataMovimentacao("10/10/2123");
		movPage.setDataPagamento("10/10/2122");
		movPage.setDescricao("Movimentacao do teste");
		movPage.setInteressado("interessado qualquer teste");
		movPage.setValor("500");
		movPage.setConta("Conta do Teste alterada");
		movPage.setStatusPago();
		movPage.salvar();
		
		List<String> erros = movPage.obterErros();
		Assert.assertTrue(
				erros.contains("Data da Movimentação deve ser menor ou igual à data atual"));
		Assert.assertEquals(1, erros.size());
	}
}
